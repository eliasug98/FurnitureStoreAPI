// <auto-generated />
using System;
using FurnitureStore.API.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FurnitureStoreProject.API.Migrations
{
    [DbContext(typeof(FurnitureStoreContext))]
    partial class FurnitureStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.25");

            modelBuilder.Entity("FurnitureStore.API.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2023, 12, 12, 2, 24, 36, 605, DateTimeKind.Utc).AddTicks(3003),
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            OrderDate = new DateTime(2023, 12, 12, 2, 24, 36, 605, DateTimeKind.Utc).AddTicks(3007),
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            OrderDate = new DateTime(2023, 12, 12, 2, 24, 36, 605, DateTimeKind.Utc).AddTicks(3008),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("FurnitureStore.API.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            Price = 1260m,
                            ProductId = 1,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            Price = 2600m,
                            ProductId = 3,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 2,
                            Price = 640m,
                            ProductId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 2,
                            Price = 520m,
                            ProductId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            OrderId = 3,
                            Price = 960m,
                            ProductId = 2,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 6,
                            OrderId = 3,
                            Price = 2080m,
                            ProductId = 4,
                            Quantity = 4
                        });
                });

            modelBuilder.Entity("FurnitureStore.API.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Available")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = true,
                            CategoryId = 1,
                            Description = "La mesa de madera.",
                            Image = "mesa.svg",
                            Name = "Mesa",
                            Price = 420m
                        },
                        new
                        {
                            Id = 2,
                            Available = false,
                            CategoryId = 1,
                            Description = "La silla de madera.",
                            Image = "silla.svg",
                            Name = "Silla",
                            Price = 320m
                        },
                        new
                        {
                            Id = 3,
                            Available = true,
                            CategoryId = 2,
                            Description = "El sillon comodo y lujoso.",
                            Image = "sillon.svg",
                            Name = "Sillon",
                            Price = 520m
                        },
                        new
                        {
                            Id = 4,
                            Available = false,
                            CategoryId = 2,
                            Description = "El ropero mas grande.",
                            Image = "ropero.svg",
                            Name = "Ropero",
                            Price = 520m
                        },
                        new
                        {
                            Id = 5,
                            Available = true,
                            CategoryId = 3,
                            Description = "Mesita pequeña con 3 patas.",
                            Image = "mesita.svg",
                            Name = "Mesita pequeña",
                            Price = 520m
                        },
                        new
                        {
                            Id = 6,
                            Available = false,
                            CategoryId = 3,
                            Description = "La cajonera con espacios divididos.",
                            Image = "cajonera.svg",
                            Name = "Cajonera",
                            Price = 520m
                        });
                });

            modelBuilder.Entity("FurnitureStore.API.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Muebles grandes de madera.",
                            Icon = "muebleGrande",
                            Name = "Muebles de Madera"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Muebles medianos en oferta",
                            Icon = "muebleMediano",
                            Name = "Muebles medianos"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Muebles pequeños para decoracion",
                            Icon = "mueblePequenio",
                            Name = "Muebles pequeños"
                        });
                });

            modelBuilder.Entity("FurnitureStore.API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 12, 11, 23, 24, 36, 605, DateTimeKind.Local).AddTicks(3129),
                            Email = "usuario1@gmail.com",
                            Password = "has3vgHdhDfbsSajsd",
                            Role = "Admin",
                            UserName = "Elias"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 12, 11, 23, 24, 36, 605, DateTimeKind.Local).AddTicks(3142),
                            Email = "usuario2@gmail.com",
                            Password = "sdDEasdegR12FgDsnasfdA",
                            Role = "Admin",
                            UserName = "Mauri"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 12, 11, 23, 24, 36, 605, DateTimeKind.Local).AddTicks(3144),
                            Email = "usuario3@gmail.com",
                            Password = "sdDEasfegR12sgDsnasfdA",
                            Role = "Cliente",
                            UserName = "cliente1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 12, 11, 23, 24, 36, 605, DateTimeKind.Local).AddTicks(3146),
                            Email = "usuario4@gmail.com",
                            Password = "sdDEasqegR12FgDsnasudA",
                            Role = "Cliente",
                            UserName = "cliente2"
                        });
                });

            modelBuilder.Entity("FurnitureStore.API.Entities.Order", b =>
                {
                    b.HasOne("FurnitureStore.API.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureStore.API.Entities.OrderDetail", b =>
                {
                    b.HasOne("FurnitureStore.API.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FurnitureStore.API.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FurnitureStore.API.Entities.Product", b =>
                {
                    b.HasOne("FurnitureStore.API.Entities.ProductCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FurnitureStore.API.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("FurnitureStore.API.Entities.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FurnitureStore.API.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
